statePtr: word[32][32]ptr
nextState: word[32][32]ptr
tempStatePtr: word[32][32]ptr
golState1: word[32][32]
golState2: word[32][32]

setup: bool = false
frameCount: word = 0

func setStartCell(x: word, y: word){
    golState1[y][x] = 5
    golState2[y][x] = 4
}

func setupGolBoards(){
    for y: word = 0; y < 32; y = y + 1 do{
        for x : word = 0; x < 32; x = x + 1 do{
            setStartCell(x, y)
        }
    }
}

func stepGameOfLife(){

}

func main(){

    asm{"wai"}
    //setupGolBoards()

    statePtr = golState1@
    nextState = golState2@

    setup = true

    //Start calulating the frame, and then while 10 frames haven't passed, wait
    //This way it will always be ready by the time we buffer swap

    while true do{
        stepGameOfLife()
        while frameCount < 10 do {
            asm{"wai"}
        }
        tempStatePtr = statePtr
        statePtr = nextState
        nextState = tempStatePtr
        frameCount = 0
    }

}

func VBlank(){
    frameCount = frameCount + 1
    if setup then{
        asm{
            "sep #$20"
            ""
            "lda #%00000100"
            "sta $2107   ;This sets the lowest bit for tilemap"
            "            ;so map starts at $0400"
            "stz $210b   ;Tiles start at 0"
            "ldx #$0400"
            "stx $2116   ;Write to VRAM where the map is"
            "            ;But halved bc of the write mode"
            "ldy #$80 ;this is just a thing we have to set"
            "sty $2115   ;VRAM incriment value"
            ""
            "lda #1"
            "sta $4300"
            "lda #$18"
            "sta $4301"
            "ldx 100"
            "stx $4302"
            "lda #$7E"
            "sta $4304"
            "ldx #2048"
            "stx $4305"
            ""
            "lda #1"
            "sta $420B"
            "rep #$20"
        }
    }
}
